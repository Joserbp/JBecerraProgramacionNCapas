@model ML.Aseguradora
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Aseguradora</h2>
            <h5>Ingrese los datos de la Aseguradora:</h5>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>


    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("Form", "Aseguradora", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="form-horizontal">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.IdAseguradora, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdAseguradora, new { @class = "hidden form-control", autocomplete = "off" })
                            @Html.ValidationMessageFor(model => model.IdAseguradora)
                            @*hidden*@
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Nombre)
                            <div class="input-group">
                                <span class="input-group-addon" id="basic-addon1">
                                    <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                                </span>
                                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })
                                @Html.ValidationMessageFor(model => model.Nombre)
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Usuario.UserName)
                            <div class="input-group">
                                <span class="input-group-addon" id="basic-addon1">
                                    <span class="glyphicon glyphicon-user" aria-hidden="true"></span>
                                </span>
                                @Html.DropDownListFor(model => model.Usuario.IdUsuario, new SelectList(Model.Usuario.Usuarios, "IdUsuario", "UserName"), "Seleciona una opcion", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Usuario.IdUsuario)
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Imagen)
                            <input type="file" name="ImagenData" onchange="readURL(this)" />
                            @if (Model.Imagen != null)
                            {
                                <img id="ImagenPreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width=" 100" height="100" />
                            }
                            else
                            {
                                <img id="ImagenPreview" src="~/Content/ImageNotFound.jpg" height=100 width=100 />
                            }
                            @Html.ValidationMessageFor(model => model.Imagen)
                        </div>
                        @Html.HiddenFor(model => model.Imagen)
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Aseguradora", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>

            }


        </div>
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>
<script>
    function readURL(input) {
        if (input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (img) {
                $("#ImagenPreview").attr('src', img.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>